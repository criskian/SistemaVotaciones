//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `MainServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package VotingSystem;

public class MesaInfo implements java.lang.Cloneable,
                                 java.io.Serializable
{
    public int mesaId;

    public String zona;

    public String estado;

    public int totalVotos;

    public String ultimoVoto;

    public int alertas;

    public String colegio;

    public MesaInfo()
    {
        this.zona = "";
        this.estado = "";
        this.ultimoVoto = "";
        this.colegio = "";
    }

    public MesaInfo(int mesaId, String zona, String estado, int totalVotos, String ultimoVoto, int alertas, String colegio)
    {
        this.mesaId = mesaId;
        this.zona = zona;
        this.estado = estado;
        this.totalVotos = totalVotos;
        this.ultimoVoto = ultimoVoto;
        this.alertas = alertas;
        this.colegio = colegio;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MesaInfo r = null;
        if(rhs instanceof MesaInfo)
        {
            r = (MesaInfo)rhs;
        }

        if(r != null)
        {
            if(this.mesaId != r.mesaId)
            {
                return false;
            }
            if(this.zona != r.zona)
            {
                if(this.zona == null || r.zona == null || !this.zona.equals(r.zona))
                {
                    return false;
                }
            }
            if(this.estado != r.estado)
            {
                if(this.estado == null || r.estado == null || !this.estado.equals(r.estado))
                {
                    return false;
                }
            }
            if(this.totalVotos != r.totalVotos)
            {
                return false;
            }
            if(this.ultimoVoto != r.ultimoVoto)
            {
                if(this.ultimoVoto == null || r.ultimoVoto == null || !this.ultimoVoto.equals(r.ultimoVoto))
                {
                    return false;
                }
            }
            if(this.alertas != r.alertas)
            {
                return false;
            }
            if(this.colegio != r.colegio)
            {
                if(this.colegio == null || r.colegio == null || !this.colegio.equals(r.colegio))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::VotingSystem::MesaInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, mesaId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, zona);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, estado);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalVotos);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, ultimoVoto);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, alertas);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, colegio);
        return h_;
    }

    public MesaInfo clone()
    {
        MesaInfo c = null;
        try
        {
            c = (MesaInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeInt(this.mesaId);
        ostr.writeString(this.zona);
        ostr.writeString(this.estado);
        ostr.writeInt(this.totalVotos);
        ostr.writeString(this.ultimoVoto);
        ostr.writeInt(this.alertas);
        ostr.writeString(this.colegio);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.mesaId = istr.readInt();
        this.zona = istr.readString();
        this.estado = istr.readString();
        this.totalVotos = istr.readInt();
        this.ultimoVoto = istr.readString();
        this.alertas = istr.readInt();
        this.colegio = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, MesaInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public MesaInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        MesaInfo v = new MesaInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<MesaInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, MesaInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<MesaInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(MesaInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final MesaInfo _nullMarshalValue = new MesaInfo();

    /** @hidden */
    public static final long serialVersionUID = -1016866470L;
}
