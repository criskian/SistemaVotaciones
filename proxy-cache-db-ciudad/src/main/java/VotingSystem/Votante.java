//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `ProxyCacheDBCiudad.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package VotingSystem;

public class Votante implements java.lang.Cloneable,
                                java.io.Serializable
{
    public String documento;

    public String nombres;

    public String apellidos;

    public int ciudadId;

    public int zonaId;

    public int mesaId;

    public Votante()
    {
        this.documento = "";
        this.nombres = "";
        this.apellidos = "";
    }

    public Votante(String documento, String nombres, String apellidos, int ciudadId, int zonaId, int mesaId)
    {
        this.documento = documento;
        this.nombres = nombres;
        this.apellidos = apellidos;
        this.ciudadId = ciudadId;
        this.zonaId = zonaId;
        this.mesaId = mesaId;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Votante r = null;
        if(rhs instanceof Votante)
        {
            r = (Votante)rhs;
        }

        if(r != null)
        {
            if(this.documento != r.documento)
            {
                if(this.documento == null || r.documento == null || !this.documento.equals(r.documento))
                {
                    return false;
                }
            }
            if(this.nombres != r.nombres)
            {
                if(this.nombres == null || r.nombres == null || !this.nombres.equals(r.nombres))
                {
                    return false;
                }
            }
            if(this.apellidos != r.apellidos)
            {
                if(this.apellidos == null || r.apellidos == null || !this.apellidos.equals(r.apellidos))
                {
                    return false;
                }
            }
            if(this.ciudadId != r.ciudadId)
            {
                return false;
            }
            if(this.zonaId != r.zonaId)
            {
                return false;
            }
            if(this.mesaId != r.mesaId)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::VotingSystem::Votante");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, documento);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, nombres);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, apellidos);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, ciudadId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, zonaId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, mesaId);
        return h_;
    }

    public Votante clone()
    {
        Votante c = null;
        try
        {
            c = (Votante)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.documento);
        ostr.writeString(this.nombres);
        ostr.writeString(this.apellidos);
        ostr.writeInt(this.ciudadId);
        ostr.writeInt(this.zonaId);
        ostr.writeInt(this.mesaId);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.documento = istr.readString();
        this.nombres = istr.readString();
        this.apellidos = istr.readString();
        this.ciudadId = istr.readInt();
        this.zonaId = istr.readInt();
        this.mesaId = istr.readInt();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, Votante v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public Votante ice_read(com.zeroc.Ice.InputStream istr)
    {
        Votante v = new Votante();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<Votante> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, Votante v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<Votante> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(Votante.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final Votante _nullMarshalValue = new Votante();

    /** @hidden */
    public static final long serialVersionUID = 7148717634306017708L;
}
