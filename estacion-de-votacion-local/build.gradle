plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group = 'com.votaciones'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation project(':seguridad')
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'com.zeroc:ice:3.7.6'
    implementation 'org.xerial:sqlite-jdbc:3.45.1.0'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

application {
    mainClass = 'com.votaciones.estacion.ui.EstacionVotacionUI'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.votaciones.estacion.ui.EstacionVotacionUI'
        )
    }
    
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// JAR específico para CLI
task cliJar(type: Jar) {
    dependsOn(':common:jar', ':seguridad:jar')
    archiveClassifier = 'cli'
    manifest {
        attributes(
            'Main-Class': 'com.votaciones.estacion.Main'
        )
    }
    
    from sourceSets.main.output
    
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    // Incluir explícitamente los JARs de los módulos dependientes
    from {
        project(':common').sourceSets.main.output
    }
    
    from {
        project(':seguridad').sourceSets.main.output
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Tarea para ejecutar la versión CLI
task runCLI(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.votaciones.estacion.Main'
}

// Tarea para ejecutar la versión GUI
task runGUI(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.votaciones.estacion.ui.EstacionVotacionUI'
}

// Tarea para generar stubs de ICE
task generateIceStubs(type: Exec) {
    workingDir projectDir
    commandLine 'slice2java', '-I', '../sistema-de-gestion-mesas/src/main/slice', '--output-dir', 'src/main/java', '../sistema-de-gestion-mesas/src/main/slice/MainServer.ice'
}

// Tarea para generar stubs de SecurityModule
task generateSecurityStubs(type: Exec) {
    workingDir projectDir
    commandLine 'slice2java', '-I', '../seguridad/src/main/slice', '--output-dir', 'src/main/java', '../seguridad/src/main/slice/SecurityModule.ice'
}

// Hacer que compileJava dependa de generateIceStubs
compileJava.dependsOn generateIceStubs, generateSecurityStubs

// Asegurarse de que el jar dependa de common:jar
jar.dependsOn(':common:jar') 