//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Admin.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Admin;

public interface AdminServer extends com.zeroc.Ice.Object
{
    void agregarCandidato(String nombre, String partido, String cargo, com.zeroc.Ice.Current current);

    void modificarCandidato(String id, String nombre, String partido, String cargo, com.zeroc.Ice.Current current);

    void eliminarCandidato(String id, com.zeroc.Ice.Current current);

    String[] listarCandidatos(com.zeroc.Ice.Current current);

    void procesarVotos(String zona, com.zeroc.Ice.Current current);

    String obtenerResultadosZona(String zona, com.zeroc.Ice.Current current);

    String obtenerResultadosGlobales(com.zeroc.Ice.Current current);

    void generarReporteCSV(String tipoReporte, com.zeroc.Ice.Current current);

    void exportarResultadosExcel(com.zeroc.Ice.Current current);

    void registrarLog(String evento, String detalle, com.zeroc.Ice.Current current);

    String[] obtenerLogs(String fecha, com.zeroc.Ice.Current current);

    boolean validarFormatoDatos(String datos, com.zeroc.Ice.Current current);

    boolean validarIntegridadResultados(com.zeroc.Ice.Current current);

    /** @hidden */
    static final String[] _iceIds =
    {
        "::Admin::AdminServer",
        "::Ice::Object"
    };

    @Override
    default String[] ice_ids(com.zeroc.Ice.Current current)
    {
        return _iceIds;
    }

    @Override
    default String ice_id(com.zeroc.Ice.Current current)
    {
        return ice_staticId();
    }

    static String ice_staticId()
    {
        return "::Admin::AdminServer";
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_agregarCandidato(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_nombre;
        String iceP_partido;
        String iceP_cargo;
        iceP_nombre = istr.readString();
        iceP_partido = istr.readString();
        iceP_cargo = istr.readString();
        inS.endReadParams();
        obj.agregarCandidato(iceP_nombre, iceP_partido, iceP_cargo, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_modificarCandidato(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_id;
        String iceP_nombre;
        String iceP_partido;
        String iceP_cargo;
        iceP_id = istr.readString();
        iceP_nombre = istr.readString();
        iceP_partido = istr.readString();
        iceP_cargo = istr.readString();
        inS.endReadParams();
        obj.modificarCandidato(iceP_id, iceP_nombre, iceP_partido, iceP_cargo, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_eliminarCandidato(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_id;
        iceP_id = istr.readString();
        inS.endReadParams();
        obj.eliminarCandidato(iceP_id, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_listarCandidatos(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        String[] ret = obj.listarCandidatos(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeStringSeq(ret);
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_procesarVotos(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_zona;
        iceP_zona = istr.readString();
        inS.endReadParams();
        obj.procesarVotos(iceP_zona, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_obtenerResultadosZona(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_zona;
        iceP_zona = istr.readString();
        inS.endReadParams();
        String ret = obj.obtenerResultadosZona(iceP_zona, current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeString(ret);
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_obtenerResultadosGlobales(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        String ret = obj.obtenerResultadosGlobales(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeString(ret);
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_generarReporteCSV(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_tipoReporte;
        iceP_tipoReporte = istr.readString();
        inS.endReadParams();
        obj.generarReporteCSV(iceP_tipoReporte, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_exportarResultadosExcel(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.exportarResultadosExcel(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_registrarLog(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_evento;
        String iceP_detalle;
        iceP_evento = istr.readString();
        iceP_detalle = istr.readString();
        inS.endReadParams();
        obj.registrarLog(iceP_evento, iceP_detalle, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_obtenerLogs(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_fecha;
        iceP_fecha = istr.readString();
        inS.endReadParams();
        String[] ret = obj.obtenerLogs(iceP_fecha, current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeStringSeq(ret);
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_validarFormatoDatos(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        String iceP_datos;
        iceP_datos = istr.readString();
        inS.endReadParams();
        boolean ret = obj.validarFormatoDatos(iceP_datos, current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeBool(ret);
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_validarIntegridadResultados(AdminServer obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        boolean ret = obj.validarIntegridadResultados(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeBool(ret);
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /** @hidden */
    final static String[] _iceOps =
    {
        "agregarCandidato",
        "eliminarCandidato",
        "exportarResultadosExcel",
        "generarReporteCSV",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "listarCandidatos",
        "modificarCandidato",
        "obtenerLogs",
        "obtenerResultadosGlobales",
        "obtenerResultadosZona",
        "procesarVotos",
        "registrarLog",
        "validarFormatoDatos",
        "validarIntegridadResultados"
    };

    /** @hidden */
    @Override
    default java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceDispatch(com.zeroc.IceInternal.Incoming in, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        int pos = java.util.Arrays.binarySearch(_iceOps, current.operation);
        if(pos < 0)
        {
            throw new com.zeroc.Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return _iceD_agregarCandidato(this, in, current);
            }
            case 1:
            {
                return _iceD_eliminarCandidato(this, in, current);
            }
            case 2:
            {
                return _iceD_exportarResultadosExcel(this, in, current);
            }
            case 3:
            {
                return _iceD_generarReporteCSV(this, in, current);
            }
            case 4:
            {
                return com.zeroc.Ice.Object._iceD_ice_id(this, in, current);
            }
            case 5:
            {
                return com.zeroc.Ice.Object._iceD_ice_ids(this, in, current);
            }
            case 6:
            {
                return com.zeroc.Ice.Object._iceD_ice_isA(this, in, current);
            }
            case 7:
            {
                return com.zeroc.Ice.Object._iceD_ice_ping(this, in, current);
            }
            case 8:
            {
                return _iceD_listarCandidatos(this, in, current);
            }
            case 9:
            {
                return _iceD_modificarCandidato(this, in, current);
            }
            case 10:
            {
                return _iceD_obtenerLogs(this, in, current);
            }
            case 11:
            {
                return _iceD_obtenerResultadosGlobales(this, in, current);
            }
            case 12:
            {
                return _iceD_obtenerResultadosZona(this, in, current);
            }
            case 13:
            {
                return _iceD_procesarVotos(this, in, current);
            }
            case 14:
            {
                return _iceD_registrarLog(this, in, current);
            }
            case 15:
            {
                return _iceD_validarFormatoDatos(this, in, current);
            }
            case 16:
            {
                return _iceD_validarIntegridadResultados(this, in, current);
            }
        }

        assert(false);
        throw new com.zeroc.Ice.OperationNotExistException(current.id, current.facet, current.operation);
    }
}
