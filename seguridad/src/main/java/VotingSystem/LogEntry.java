//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `ProxyCacheDBCiudad.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package VotingSystem;

public class LogEntry implements java.lang.Cloneable,
                                 java.io.Serializable
{
    public String tipo;

    public String mensaje;

    public String fechaHora;

    public LogEntry()
    {
        this.tipo = "";
        this.mensaje = "";
        this.fechaHora = "";
    }

    public LogEntry(String tipo, String mensaje, String fechaHora)
    {
        this.tipo = tipo;
        this.mensaje = mensaje;
        this.fechaHora = fechaHora;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LogEntry r = null;
        if(rhs instanceof LogEntry)
        {
            r = (LogEntry)rhs;
        }

        if(r != null)
        {
            if(this.tipo != r.tipo)
            {
                if(this.tipo == null || r.tipo == null || !this.tipo.equals(r.tipo))
                {
                    return false;
                }
            }
            if(this.mensaje != r.mensaje)
            {
                if(this.mensaje == null || r.mensaje == null || !this.mensaje.equals(r.mensaje))
                {
                    return false;
                }
            }
            if(this.fechaHora != r.fechaHora)
            {
                if(this.fechaHora == null || r.fechaHora == null || !this.fechaHora.equals(r.fechaHora))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::VotingSystem::LogEntry");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, tipo);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, mensaje);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fechaHora);
        return h_;
    }

    public LogEntry clone()
    {
        LogEntry c = null;
        try
        {
            c = (LogEntry)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.tipo);
        ostr.writeString(this.mensaje);
        ostr.writeString(this.fechaHora);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.tipo = istr.readString();
        this.mensaje = istr.readString();
        this.fechaHora = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, LogEntry v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public LogEntry ice_read(com.zeroc.Ice.InputStream istr)
    {
        LogEntry v = new LogEntry();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<LogEntry> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, LogEntry v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<LogEntry> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(LogEntry.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final LogEntry _nullMarshalValue = new LogEntry();

    /** @hidden */
    public static final long serialVersionUID = 7605045750977342608L;
}
